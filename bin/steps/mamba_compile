#!/usr/bin/env bash
set +e

MICROMAMBA_VERSION=$(cat mamba.yml | grep 'runtime:'| tr -d "\n")

IFS=' ' read -r -a RUNTIME_ARRAY <<< ${MICROMAMBA_VERSION}
# https://anaconda.org/conda-forge/micromamba/0.23.1/download/linux-64/micromamba-0.23.1-0.tar.bz2
MICROMAMBA_URL=${RUNTIME_ARRAY[-1]}


IFS='/' read -r -a URL_PARTS <<< ${MICROMAMBA_URL}
# micromamba-0.23.1-0.tar.bz2
MICROMAMBA_FILENAME=${URL_PARTS[-1]}

IFS='-' read -r -a VERSION_ARRAY <<< ${MICROMAMBA_FILENAME}
# 0.23.1
VERSION=${VERSION_ARRAY[1]}

export MAMBA_EXE=/app/.heroku/micromamba/bin/micromamba
export MAMBA_ROOT_PREFIX=/app/.heroku/micromamba

if [ ! -d /app/.heroku/micromamba ]; then
    puts-step "Fetching Mamba from: ${MICROMAMBA_URL}"
    if ! wget $MICROMAMBA_URL ; then
        exit 1
    fi

    ls ./
    puts-step "Extracting: '${MICROMAMBA_FILENAME}'"
    mkdir -p /app/.heroku/micromamba/
    file $MICROMAMBA_FILENAME
    tar -xvjf $MICROMAMBA_FILENAME -C /app/.heroku/micromamba/
    rm $MICROMAMBA_FILENAME

    ls /app/.heroku/micromamba/

    # Create empty base env initial update fails
    mkdir -p /app/.heroku/micromamba/conda-meta/
    touch /app/.heroku/micromamba/conda-meta/history

    if [ -f .mambarc ]; then
        puts-step "Copying mambarc file to micromamba directory"
        cp .mambarc /app/.heroku/micromamba
    fi

    mkdir -p $HOME/.heroku/micromamba/mamba-meta/
    echo "nomkl" > $HOME/.heroku/micromamba/mamba-meta/pinned
    # Pin the conda version if proper version, not `latest` or anything else
    if [[ $VERSION =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
        echo "micromamba ==${VERSION}" >> $HOME/.heroku/micromamba/mamba-meta/pinned
    fi
    echo "added pinned file in $HOME/.heroku/micromamba/mamba-meta/pinned"
fi

# Update the root conda env with the mamba.yml
puts-step "Activate mamba environment"
eval "$(micromamba shell hook --shell=bash)"
micromamba activate
micromamba info

puts-step "Updating mamba environment"
micromamba update --file mamba.yml --prune | indent

if [ -f requirements.txt ]; then
    puts-step "Installing dependencies using Pip"
    pip install -r requirements.txt  --exists-action=w | indent
fi

# Clean up the installation environment .
micromamba clean -pt --yes > /dev/null

puts-step "Listing environment"
micromamba list
if command -v pip &> /dev/null; then pip list; fi

